import{_ as r}from"./chunks/Title.vue_vue_type_script_setup_true_lang.1cda6a45.js";import{d as c,r as y,o as n,c as l,a as F,b as o,e as s,f as a}from"./app.de74f4cb.js";import"./chunks/_virtual_variants.e1258891.js";import"./chunks/text.209dda02.js";const D=o(`<p>The job of namer is to tell windi how to name the generated css.</p><h2 id="built-in-namers" tabindex="-1">Built-in Namers <a class="header-anchor" href="#built-in-namers" aria-hidden="true">#</a></h2><p>At present(<a href="https://github.com/windijs/windijs/tree/windijs%401.1.4" target="_blank" rel="noreferrer">windijs@1.1.4</a>), windi includes the following three built-in namers. The source code can found <a href="https://github.com/windijs/windijs/blob/windijs%401.1.4/packages/helpers/src/namer.ts" target="_blank" rel="noreferrer">here</a>.</p><h3 id="alpha-namer" tabindex="-1">Alpha Namer <a class="header-anchor" href="#alpha-namer" aria-hidden="true">#</a></h3><p>Alpha Namer will name the generated css one by one in the order of <code>.a, .b, .c, ..., .a0, .a1, ...</code>. The advantage of this method is that it is <strong>simple</strong> and <strong>clean</strong>, works well in SPA. But, because this method depends on <strong>the order of generated css</strong>, if your site uses SSR architecture, there may be a problem of losing style due to repeated naming in separate pages.</p><p>The default namer of Windi JS is the Alpha Namer. You don&#39;t need to specify it yourself. The following is an example, which you can do when you encounter some special situations.</p><div class="language-js"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">alphaNamer</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">useNamer</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">windijs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">useNamer</span><span style="color:#A6ACCD;">(alphaNamer)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="hash-namer" tabindex="-1">Hash Namer <a class="header-anchor" href="#hash-namer" aria-hidden="true">#</a></h3><p>Hash Namer names css by calculating the <strong>hash value</strong> of the <strong>metadata</strong> of each css <a href="https://github.com/windijs/windijs/blob/windijs%401.1.4/packages/helpers/src/types.ts#L71" target="_blank" rel="noreferrer">StyleObject</a>. For Example, <code>.w-1r1q5pt .w-qawtuy .w-1d7u671 ...</code>. The advantage is that it always generates same name when meta is same. So it&#39;s works perfect for SSR architecture, the disadvantage is that it may not as concise as alpha namer.</p><div class="language-js"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">hashNamer</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">useNamer</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">windijs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">useNamer</span><span style="color:#A6ACCD;">(hashNamer)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="atomic-namer" tabindex="-1">Atomic Namer <a class="header-anchor" href="#atomic-namer" aria-hidden="true">#</a></h3><p>Atomic namer will keep the <strong>original props</strong> for naming css. For example, when you call <code>rounded.lg</code>, the generated css will be named as <code>.rounded\\.lg</code>, and <code>hover(rounded.lg, font.bold)</code> will be named as <code>hover\\:rounded\\.lg hover\\:font\\.bold</code>. This namer is more suitable <strong>for development</strong>, because it can see which utility generates what css, but it is not recommended for production.</p><div class="language-js"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">atomicNamer</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">useNamer</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">windijs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">useNamer</span><span style="color:#A6ACCD;">(atomicNamer)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="custom-namer" tabindex="-1">Custom Namer <a class="header-anchor" href="#custom-namer" aria-hidden="true">#</a></h2><p>You can create your own namer, such as using different hash algorithms.</p>`,15),i={key:0,class:"language-ts"},A=o(`<button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">useNamer</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">getStyleIdent</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">windijs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">StyleObject</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">windijs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">myNamer</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">style</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">StyleObject</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">_</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">myHash</span><span style="color:#F07178;">(</span><span style="color:#82AAFF;">getStyleIdent</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">style</span><span style="color:#F07178;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">useNamer</span><span style="color:#A6ACCD;">(myNamer)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre>`,3),C=[A],d={key:1,class:"language-js"},m=o(`<button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">useNamer</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">getStyleIdent</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">windijs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">myNamer</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">style</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">_</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">myHash</span><span style="color:#F07178;">(</span><span style="color:#82AAFF;">getStyleIdent</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">style</span><span style="color:#F07178;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">useNamer</span><span style="color:#A6ACCD;">(myNamer)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre>`,3),u=[m],h=s("p",null,[s("a",{href:"https://github.com/windijs/windijs/blob/windijs%401.1.4/packages/helpers/src/common.ts#L28",target:"_blank",rel:"noreferrer"},"getStyleIdent"),a(" will generate a unique identifier for "),s("a",{href:"https://github.com/windijs/windijs/blob/windijs%401.1.4/packages/helpers/src/types.ts#L71",target:"_blank",rel:"noreferrer"},"StyleObject"),a(". You can also use attributes like "),s("code",null,"style.meta"),a(", "),s("code",null,"style.css"),a(" to generate hash.")],-1),g={key:2,class:"language-ts"},b=o(`<button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">useNamer</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">hash</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">windijs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">StyleObject</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">windijs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">myNamer</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">style</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">StyleObject</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">_</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">hash</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stringify</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">style</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">css</span><span style="color:#F07178;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">useNamer</span><span style="color:#A6ACCD;">(myNamer)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre>`,3),f=[b],_={key:3,class:"language-js"},N=o(`<button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">useNamer</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">hash</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">windijs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">myNamer</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">style</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">_</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">hash</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stringify</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">style</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">css</span><span style="color:#F07178;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">useNamer</span><span style="color:#A6ACCD;">(myNamer)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre>`,3),w=[N],j=s("p",null,[s("strong",null,"Note"),a(": If your class name contains characters that need to be escaped, such as "),s("code",null,"@"),a(", "),s("code",null,":"),a(", "),s("code",null,"."),a(", you can use the built-in "),s("a",{href:"https://github.com/windijs/windijs/blob/windijs%401.1.4/packages/helpers/src/escape.ts",target:"_blank",rel:"noreferrer"},"escapeCSS"),a(" method to escape them.")],-1),S={key:4,class:"language-ts"},q=o(`<button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">useNamer</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">escapeCSS</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">getStyleIdent</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">windijs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">StyleObject</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">windijs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">myNamer</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">style</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">StyleObject</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">escapeCSS</span><span style="color:#F07178;">(</span><span style="color:#82AAFF;">getStyleIndent</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">style</span><span style="color:#F07178;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">useNamer</span><span style="color:#A6ACCD;">(myNamer)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre>`,3),v=[q],k={key:5,class:"language-js"},E=o(`<button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">useNamer</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">escapeCSS</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">getStyleIdent</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">windijs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">myNamer</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">style</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">escapeCSS</span><span style="color:#F07178;">(</span><span style="color:#82AAFF;">getStyleIndent</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">style</span><span style="color:#F07178;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">useNamer</span><span style="color:#A6ACCD;">(myNamer)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre>`,3),B=[E],L=JSON.parse('{"title":"","description":"","frontmatter":{"outline":"deep"},"headers":[{"level":2,"title":"Built-in Namers","slug":"built-in-namers","link":"#built-in-namers","children":[{"level":3,"title":"Alpha Namer","slug":"alpha-namer","link":"#alpha-namer","children":[]},{"level":3,"title":"Hash Namer","slug":"hash-namer","link":"#hash-namer","children":[]},{"level":3,"title":"Atomic Namer","slug":"atomic-namer","link":"#atomic-namer","children":[]}]},{"level":2,"title":"Custom Namer","slug":"custom-namer","link":"#custom-namer","children":[]}],"relativePath":"customization/namer.md"}'),x={name:"customization/namer.md"},Y=c({...x,setup(O){const p=y(!1);return(I,e)=>(n(),l("div",null,[F(r,{head:"Namer",ts:p.value,"onUpdate:ts":e[0]||(e[0]=t=>p.value=t)},null,8,["ts"]),D,p.value?(n(),l("div",i,C)):(n(),l("div",d,u)),h,p.value?(n(),l("div",g,f)):(n(),l("div",_,w)),j,p.value?(n(),l("div",S,v)):(n(),l("div",k,B))]))}});export{L as __pageData,Y as default};
